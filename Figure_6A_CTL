# Correlation between polyamine geneset ssGSEA and cytolytic ssGSEA scores 

# Load libraries ----------------------------------------------
library(dplyr)
library(readr)
library(tidyr)
library(ggpubr)
library(tibble)
library(scales)
library(ggsci)
library(purrr)
library(Hmisc)
library(rstatix)
library(data.table)
library(ComplexHeatmap)
library(colorRamps)
library(circlize)
library(WGCNA)
library(CePa)


# define samples of interest ----------------------------------------------
listtx.tstatus <- list.files(path = "~/Tcell_status_table_TCGA_supplemental_datasets/Tstatus_derived_with_TCGA_RSEM_vstNorm_data_ssGSEA_input",     # Identify all txt files in folder
                             pattern = "*.txt", full.names = TRUE)

samples <- lapply(listtx.tstatus, function(x) {
  dat = fread(x) %>%
    filter(Tstatus == "Thi") %>%
    select(SampleID)
  return(dat)
}) %>%
  bind_rows() 

samples <- samples$SampleID 
samples <- unique(samples) # 1752 total samples are Thi across all tumors

# load ssGSEA cytolytic pathway data --------
listtx.cytolytic.ssGSEA <- list.files(path = "~/TCGA_data/TCGA_ssGSEA_cytolyticPathway/deseq2_vstNorm_RSEM_data_input_CD8_CTL_ssGSEA_results/",     
                                      pattern = "*.gct", full.names = TRUE) 

data.cytolytic <- lapply(listtx.cytolytic.ssGSEA, function(x) {
  dat = fread(x,
              sep = "\t",
              skip = 2) %>%
    as.data.frame() %>%
    as_tibble()
  colnames(dat) <- gsub("-", "\\.",colnames(dat))
  dat = dat %>%
    column_to_rownames(var = "Name") %>%
    dplyr::select(any_of(samples))
  
  dat = as.data.frame(scale(t(dat)))
  dat = dat %>%
    rownames_to_column(var = "SampleID") %>%
    dplyr::select(SampleID,CYTOTOXIC_TCELLS_BINDEA)
  
  return(dat)
}) 

# name.vec <- substr(listtx.cytolytic.ssGSEA,120,150) 
name.vec.ssGSEA <- c("BLCA", "BRCA", "CESC", "CESC-HPVpos", "HNSC", "HNSC-HPVneg", "HNSC-HPVpos", 
                     "KIRC", "LUAD", "LUSC", "PRAD", "SKCM", "THCA")
names(data.cytolytic) <- name.vec.ssGSEA

# load ssGSEA polyamine pathway data --------
listtx.polyamine.ssGSEA <- list.files(path = "~/TCGA_data/TCGA_ssGSEA_polyamines/deseq2_vstNorm_RSEM_data_input_polyamines_ssGSEA_results",     
                                      pattern = "*.gct", full.names = TRUE) 

data.polyamine.ssGSEA <- lapply(listtx.polyamine.ssGSEA, function(x) {
  dat = fread(x,
              sep = "\t",
              skip = 2) %>%
    as.data.frame() %>%
    as_tibble()
  colnames(dat) <- gsub("-", "\\.",colnames(dat))
  dat = dat %>%
    column_to_rownames(var = "Name") %>%
    dplyr::select(any_of(samples))
  
  dat = as.data.frame(scale(t(dat)))
  dat = dat %>%
    rownames_to_column(var = "SampleID") %>%
    dplyr::select(SampleID,Polyamine_synthesis,Polyamine_catabolism,Polyamine_transport,Polyamine_combined)
  
  return(dat)
}) 

# name.vec <- substr(listtx.polyamine.ssGSEA,120,150)
name.vec.polyamines.ssGSEA <- c("BLCA", "BRCA", "CESC", "CESC-HPVpos", "HNSC", "HNSC-HPVneg", "HNSC-HPVpos", 
                                "KIRC", "LUAD", "LUSC", "PRAD", "SKCM", "THCA")
names(data.polyamine.ssGSEA) <- name.vec.polyamines.ssGSEA

# merge polyamine and CTL ssGSEA data ---------------------------
data.polyamine.bind <- data.polyamine.ssGSEA %>%
  bind_rows(.id = 'TumorType') 

data.cytolytic.bind <- data.cytolytic %>%
  bind_rows(.id = 'TumorType') 

# merge polyamine and CTL data
data.merge <- data.polyamine.bind %>%
  left_join(data.cytolytic.bind,by=c("SampleID","TumorType")) %>%
  dplyr::rename(CTL_score = CYTOTOXIC_TCELLS_BINDEA,
         Synthesis = Polyamine_synthesis,
         Catabolism = Polyamine_catabolism,
         Transport = Polyamine_transport,
         Combined = Polyamine_combined)

# Convert merged dataset into a list for downstream analysis
data.merge.list <- data.merge %>%
  group_by(TumorType) %>%
  group_split()
  
names(data.merge.list) <- name.vec.ssGSEA

# correlation between polyamine and cytolytic pathway ssGSEA scores ---------------------------
data.cor <- lapply(data.merge.list, function(x) {
  cor.mat <- x %>% 
    dplyr::select(-TumorType) %>%
    column_to_rownames(var = "SampleID") %>%
    WGCNA::cor(use = "pairwise.complete.obs",quick = 0.5) %>% 
    as.data.frame() %>%
    rownames_to_column(var = "rowname") %>%
    as_tibble()  %>% 
    pull_lower_triangle(diagonal = F)  %>% 
    gather(key = "column", value = "cor", -rowname) %>%
    as_tibble() %>%
    dplyr::rename(var1 = rowname, var2 = column)  %>%
    dplyr::mutate(cor = as.numeric(cor)) %>%
    drop_na() %>%
    dplyr::filter(var1 == "CTL_score" | var2 == "CTL_score") %>%
    dplyr::mutate(var3 = ifelse(var1=="CTL_score",var2,
                         ifelse(var2=="CTL_score",var1,NA))) %>%
    dplyr::rename(gene = var3) %>%
    dplyr::select(gene,cor) 
  return(cor.mat)
  
}) %>%
  bind_rows(.id = 'TumorType') 

# Code to get table of p values and r values ----------------------------------------------------------------------

flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor  =(cormat)[ut],
    p = pmat[ut]
  )
}

data.cor.r.p <- lapply(data.merge.list, function(x) {
  cor.mat <- x %>%
    dplyr::select(-TumorType) %>%
    column_to_rownames(var = "SampleID")  %>%
    WGCNA::corAndPvalue(use = "pairwise.complete.obs")
  flattenCorrMatrix(cor.mat$cor, cor.mat$p) %>%
    dplyr::rename(var1 = row, var2 = column) %>%
    drop_na() %>%
    dplyr::filter(var1 == "CTL_score" | var2 == "CTL_score")
}) %>%
  bind_rows(.id = 'TumorType') %>%
  mutate(p.adj = p.adjust(p,method = "fdr")) %>%
  dplyr::filter(p.adj < 0.25 & cor > 0)

table(data.cor.r.p$var1)
range(data.cor.r.p$cor[data.cor.r.p$var1=="Catabolism"]) # modify to view results for polyamine gene set of interest

# Limit genes/pathways to those present in all samples -------------------------------------

df.cor <- data.cor %>%
  group_by(gene) %>%
  dplyr::mutate(name_count = n()) %>%
  ungroup() %>% 
  dplyr::filter(name_count == 13) %>% 
  dplyr::select(-name_count) 

# create matrix for heatmap -------------------------------------
df.cor.mat <- df.cor %>%
  dplyr::select(gene,cor,TumorType) %>%
  tidyr::spread(key = "TumorType",value = "cor") %>%
  column_to_rownames(var = "gene") %>%
  data.matrix() 

# Polyamine vs cytolytic pathway heatmap ------------------------------------------------------------

# define color palette
mypalette <- c("#EFC000FF","white","#0073C2FF")

# Define directory
dir = c("~/correlation_heatmaps_TCGA_datasets_CTL_IFN_vs_metabolic_genes/")
dpi=600

tiff(paste0(dir,"correlation_polyamine_extended_ssGSEA_vs_cytolyticScore_ssGSEA_heatmap_210519.tif"),
     width = 6*dpi,
     height = 3.5*dpi,
     type = "cairo",
     compression = "lzw",
     res = dpi,
     family = "Helvetica")

ht = Heatmap(df.cor.mat, 
             name = "r", 
             column_title = "Correlation between polyamine and cytotoxic ssGSEA scores",
             column_title_gp = gpar(fontsize = 14),
             cluster_rows = T, cluster_columns = T,
             clustering_distance_rows = "euclidean",
             clustering_method_rows = "complete",
             clustering_distance_columns = "euclidean",
             clustering_method_columns = "complete",
             show_row_dend = F,
             show_column_dend = F,
             show_row_names = T, show_column_names = T,
             row_title_side = "left", row_names_side = "left",
             row_names_gp = gpar(cex=1.2),
             column_names_gp = gpar(cex=1.2),
             column_names_rot = 45,
             col = colorRamp2(c(-0.5, 0, 0.5), mypalette),
             heatmap_legend_param = list(title_gp = gpar(fontsize = 16, fontface = "italic"),
                                         labels_gp = gpar(fontsize = 12))
) 

draw(ht, padding = unit(c(2, 2, 2, 20), "mm"))

dev.off()

